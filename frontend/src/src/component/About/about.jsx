import { useState, useEffect } from 'react';
import styles from './about.module.scss';

const About = ({ aboutRef }) => {
    const [isResumeOpen, setIsResumeOpen] = useState(false);
    const [pdfUrl, setPdfUrl] = useState(null);
    const [isLoading, setIsLoading] = useState(false);
    const [error, setError] = useState(null);

    useEffect(() => {
        // –û—á–∏—Å—Ç–∫–∞ –æ–±—ä–µ–∫—Ç–∞ URL –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
        return () => {
        if (pdfUrl) URL.revokeObjectURL(pdfUrl);
        };
    }, [pdfUrl]);

    const handleOpenResume = async () => {
        setIsLoading(true);
        setError(null);
        
        try {
        if (!pdfUrl) {
            const response = await fetch('/ibra.pdf');
            if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ PDF');
            const blob = await response.blob();
            setPdfUrl(URL.createObjectURL(blob));
        }
        setIsResumeOpen(true);
        } catch (err) {
        setError(err.message);
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ PDF:', err);
        } finally {
        setIsLoading(false);
        }
    };

    return (
        <div ref={aboutRef} className={styles.containerAbout}>
        <div className={styles.containerAbout__content}>
            <div className={styles.containerAbout__content_text}>
            <h1 className={styles.containerAbout__content__text_h1}>–û–±–æ –º–Ω–µ</h1>
            </div>

            <div className={styles.containerAbout__content_info}>
            <h2 className={styles.heroTitle}>üöÄ –ò–±—Ä–æ—Ö–∏–º –≠—Ä–≥–µ—à–µ–≤ | Fullstack –ú–∞—Å—Ç–µ—Ä –ö–æ–¥–∞</h2>

            <p className={styles.paragraph}>
                –ü—Ä–∏–≤–µ—Ç, –º–∏—Ä! üëã –Ø ‚Äî <span className={styles.accent}>–ò–±—Ä–æ—Ö–∏–º</span>, –Ω–æ –≤ –º–∏—Ä–µ –±–∞–π—Ç–æ–≤ –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –º–µ–Ω—è –º–æ–∂–Ω–æ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å –ø–æ–¥ –Ω–∏–∫–æ–º <span className={styles.nickname}>"IBRA"</span> (–∏–ª–∏ –ø—Ä–æ—Å—Ç–æ "<span className={styles.accent}>—Ç–æ—Ç —Å–∞–º—ã–π fullstack-—á–∞—Ä–æ–¥–µ–π</span>").
            </p>

            <div className={styles.section}>
                <h3 className={styles.subtitle}>üßë‚Äçüíª –ß–µ–º –∑–∞–Ω–∏–º–∞—é—Å—å?</h3>
                <p className={styles.paragraph}>
                –°–æ–∑–¥–∞—é <span className={styles.bold}>–±—ã—Å—Ç—Ä—ã–µ, –∫—Ä–∞—Å–∏–≤—ã–µ –∏ —É–º–Ω—ã–µ</span> –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ä–∞–±–æ—Ç–∞—é—Ç, –∞ <span className={styles.accent}>–≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—Ç</span>. –ú–æ–π —Å—Ç–µ–∫ ‚Äî —ç—Ç–æ <span className={styles.tech}>React</span>, <span className={styles.tech}>Next.js</span>, <span className={styles.tech}>Node.js</span>, –∞ —è–∑—ã–∫–∏ ‚Äî <span className={styles.tech}>JS/TS</span> (–∏ –¥–∞–∂–µ <span className={styles.tech}>CJS</span>, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ).
                </p>
            </div>

            <div className={styles.section}>
                <h3 className={styles.subtitle}>üî• –ì–¥–µ —Ç–≤–æ—Ä—é?</h3>
                <p className={styles.paragraph}>
                –î–Ω—ë–º ‚Äî <span className={styles.accent}>Fullstack-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –≤ Wetop</span>, –Ω–æ—á—å—é ‚Äî <span className={styles.accent}>—Ñ—Ä–∏–ª–∞–Ω—Å-–º–∞–≥</span>, –ø—Ä–µ–≤—Ä–∞—â–∞—é—â–∏–π –∏–¥–µ–∏ –≤ –∫–æ–¥.
                </p>
            </div>

            <div className={styles.section}>
                <h3 className={styles.subtitle}>üí° –ú–æ—è —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è:</h3>
                <blockquote className={styles.quote}>
                "–ö–æ–¥ ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å—Ç—Ä–æ—á–∫–∏, –∞ –∫–∏—Ä–ø–∏—á–∏–∫–∏ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –≤—Å–µ–ª–µ–Ω–Ω—ã—Ö. –ò —è —Å—Ç—Ä–æ—é –∏—Ö —Å –¥—É—à–æ–π."
                </blockquote>
            </div>
            <p className={styles.cta}>
                –•–æ—á–µ—à—å –∫—Ä—É—Ç–æ–π —Å–∞–π—Ç, –º–æ—â–Ω–æ–µ API –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ–±—Å—É–¥–∏—Ç—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏? <span className={styles.highlight}>–î–∞–≤–∞–π —Ä–∞–±–æ—Ç–∞—Ç—å!</span> ‚ú®
            </p>
            </div>

            <div className={styles.resumeWrapper}>
            <button 
                onClick={handleOpenResume}
                className={styles.resumeButton}
                disabled={isLoading}
                aria-label={isLoading ? "–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∑—é–º–µ..." : "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—é–º–µ"}
            >
                {isLoading ? (
                <span className={styles.resumeLoader} />
                ) : (
                <>
                    <span className={styles.resumeIcon}>üìÑ</span>
                    <span className={styles.resumeText}>
                    {error ? "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏" : "–•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –º–µ–Ω—è —Ñ–æ—Ä–º–∞–ª—å–Ω–æ?"}
                    </span>
                    <span className={styles.resumeAction}>
                    {error ? "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞" : "üñ±Ô∏è –ö–ª–∏–∫–Ω–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"}
                    </span>
                    <span className={styles.resumeHoverEffect} aria-hidden="true"></span>
                </>
                )}
            </button>
            {error && (
                <div className={styles.errorTooltip}>
                –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∑—é–º–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.
                </div>
            )}
            </div>
        </div>

        {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è PDF */}
        {/* {isResumeOpen && (
            <div className={styles.modalOverlay} onClick={() => setIsResumeOpen(false)}>
            <div className={styles.modalContent} onClick={(e) => e.stopPropagation()}>
                <button 
                className={styles.closeButton}
                onClick={() => setIsResumeOpen(false)}
                aria-label="–ó–∞–∫—Ä—ã—Ç—å"
                >
                &times;
                </button>
                
                {pdfUrl ? (
                <iframe 
                    src={`${pdfUrl}#view=fitH`}
                    className={styles.pdfIframe}
                    title="–†–µ–∑—é–º–µ –ò–±—Ä–æ—Ö–∏–º–∞ –≠—Ä–≥–µ—à–µ–≤–∞"
                    allow="autoplay"
                />
                ) : (
                <div className={styles.pdfLoader}>
                    {isLoading ? "–ó–∞–≥—Ä—É–∑–∫–∞..." : "PDF –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω"}
                </div>
                )}
            </div>
            </div>
        )} */}
        {isResumeOpen && (
            <div className={styles.modalOverlay} onClick={() => setIsResumeOpen(false)}>
                <div className={styles.modalContent} onClick={(e) => e.stopPropagation()}>
                <button 
                    className={styles.closeButton}
                    onClick={() => setIsResumeOpen(false)}
                    aria-label="–ó–∞–∫—Ä—ã—Ç—å"
                >
                    &times;
                </button>
                
                {pdfUrl ? (
                    <div className={styles.pdfContainer}>
                    <iframe 
                        src={`${pdfUrl}#view=fitH`}
                        className={styles.pdfIframe}
                        title="–†–µ–∑—é–º–µ –ò–±—Ä–æ—Ö–∏–º–∞ –≠—Ä–≥–µ—à–µ–≤–∞"
                        allow="autoplay"
                        loading="lazy"
                    />
                    <div className={styles.pdfControls}>
                        <a 
                        href={pdfUrl} 
                        download="–†–µ–∑—é–º–µ_–ò–±—Ä–æ—Ö–∏–º_–≠—Ä–≥–µ—à–µ–≤.pdf"
                        className={styles.downloadButton}
                        >
                        üì• –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—é–º–µ
                        </a>
                    </div>
                    </div>
                ) : (
                    <div className={styles.pdfLoader}>
                    {isLoading ? (
                        <div className={styles.loaderAnimation}>
                        <div className={styles.spinner}></div>
                        –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∑—é–º–µ...
                        </div>
                    ) : (
                        "PDF –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω"
                    )}
                    </div>
                )}
                </div>
            </div>
            )}

        
        </div>
    );
};

export default About;